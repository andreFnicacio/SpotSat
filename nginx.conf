# nginx.conf

user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    upstream django {
        server web;  # Garantindo que o Nginx conhece o serviço 'web' definido no docker-compose
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://django;  # Use o upstream 'django' definido acima
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Configurações adicionais para servir arquivos estáticos, se necessário
        location /static/ {
            alias /app/static/;  # Ajuste conforme o local dos seus arquivos estáticos
        }

        location /media/ {
            alias /app/media/;  # Ajuste conforme o local dos seus arquivos de mídia
        }
    }
}
